{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","FormattedDate","date","toLocaleTimeString","UserGreeting","user","GuestGreeting","Greeting","isLoggedIn","LoginButton","LogoutButton","WarnningBanner","warn","Blog","sidebar","posts","map","post","key","id","children","title","content","ThemeContext","createContext","BoilingVerdict","context","contextType","TemperatureInput","temperature","scale","c","f","onChange","e","onTemperatureChange","target","FancyBorder","color","Dialog","message","ProductRow","stocked","name","price","ProductCategoryRow","category","ProductTable","state","apiJson","url","method","data","options","callback","err_callback","catch_callback","Object","keys","length","toLowerCase","params","includes","slice","body","fetch","then","res","ok","json","bind","catch","pfetch","test","setState","items","lst","filterText","isStockOnly","forEach","push","getFiltered","categorys","getCategory","item","SearchBar","onSearchChange","placeholder","onStockChange","type","FilterableProductTable","handleSearchChange","handleStockChange","checked","tabIndex","firstName","lastName","formatName","getGreeting","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","calculateWinner","lines","a","b","ReactDOM","render","msg","document","getElementById"],"mappings":"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","file":"static/js/main.0771af71.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {add} from './test';\n\n// 类组件\n// class Square extends React.Component {\n//     render() {\n//         return (\n//             <button className=\"square\" onClick={() => this.props.onClick()}>\n//                 {this.props.value}\n//             </button>\n//         );\n//     }\n// }\n\n// 函数组件\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} />\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            xIsNext: true,\n            stepNumber: 0,\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1]\n        const squares = current.squares.slice();\n        if(calculateWinner(squares) || squares[i]) return;\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n            }]),\n            xIsNext: !this.state.xIsNext,\n            stepNumber: history.length,\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n        const status = winner ? 'Winner: ' + winner : 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        const moves = history.map((step, move) => {\n            const desc = move ? 'Go to move #' + move : 'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        });\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction Welcome(props){\n    return (\n        <h1>\n            Hello {props.name}.\n        </h1>\n    );\n}\n\nfunction FormattedDate(props) {\n    return <h2>It is {props.date.toLocaleTimeString()}.</h2>;\n}\n\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: new Date(),\n        };\n        this.tick = this.tick.bind(this);\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            this.tick,\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n        this.setState({\n            date: new Date(),\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Hello, world!</h1>\n                <FormattedDate date={this.state.date}/>\n            </div>\n        );\n    }\n}\n\nclass Toggle extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isToggleOn: true,\n        };\n\n        // 为了在回调中使用'this', 这个绑定必不可少的\n        // this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick = () => {\n        this.setState(state => ({\n            isToggleOn: !state.isToggleOn,\n        }));\n    }\n\n    render() {\n        return (\n            <button onClick={this.handleClick}>\n                {this.state.isToggleOn ? 'ON' : 'OFF'}\n            </button>\n        );\n    }\n}\n\nfunction UserGreeting(props) {\n    return <h1>Welcome {props.user}.</h1>;\n}\n\nfunction GuestGreeting(props) {\n    return <h1>Please sign in.</h1>\n}\n\nfunction Greeting(props) {\n    const isLoggedIn = props.isLoggedIn;\n    return isLoggedIn ? <UserGreeting user='Rock Johnson'/> : <GuestGreeting />\n}\n\nfunction LoginButton(props) {\n    return (\n        <button onClick={props.onClick}>\n            Login\n        </button>\n    );\n}\n\nfunction LogoutButton(props) {\n    return (\n        <button onClick={props.onClick}>\n            Logout\n        </button>\n    );\n}\n\nclass LoginControl extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: false,\n        };\n    }\n\n    handleLoginClick = () => {\n        this.setState({isLoggedIn: true})\n    }\n\n    handleLogoutClick = () => {\n        this.setState({isLoggedIn: false})\n    }\n\n    render() {\n        const isLoggedIn = this.state.isLoggedIn;\n\n        return (\n            <div>\n                <Greeting isLoggedIn={isLoggedIn}/>\n                {isLoggedIn ?\n                    <LogoutButton onClick={this.handleLogoutClick}/>\n                    :\n                    <LoginButton onClick={this.handleLoginClick}/>\n                }\n            </div>\n        );\n    }\n}\n\nfunction MailBox(props) {\n    const unreadMessages = props.unreadMessages;\n    return (\n        <div>\n            <h1>Hello!</h1>\n            {unreadMessages.length > 0 &&\n                <h2>\n                    You have {unreadMessages.length} unread messages.\n                </h2>\n            }\n        </div>\n    );\n}\n\nfunction WarnningBanner(props) {\n    if(!props.warn) return null;\n\n    return (\n        <div className='warning'>\n            Warning!\n        </div>\n    );\n}\n\nclass Page extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state  = {\n            showWarning: true,\n        };\n    }\n\n    handleToggleClick = () => {\n        this.setState(state => ({\n            showWarning: !state.showWarning,\n        }));\n    }\n\n    render() {\n        return (\n            <div>\n                <WarnningBanner warn={this.state.showWarning}/>\n                <button onClick={this.handleToggleClick}>\n                    {this.state.showWarning ? 'Hide' : 'Show'}\n                </button>\n            </div>\n        );\n    }\n}\n\nfunction ListItem(props) {\n    return <li children={props.value} />;\n}\n\nfunction NumberList(props) {\n    const numbers = props.numbers;\n\n    return (\n        <ul children={numbers.map((msg, i) =>\n            <ListItem key={i} value={msg} />\n        )} />\n    );\n}\n\nfunction Blog(props) {\n    const sidebar = (\n        <ul>\n            {props.posts.map(post =>\n                <li key={post.id} children={post.title} />\n            )}\n        </ul>\n    );\n    const content = props.posts.map(post =>\n        <div key={post.id}>\n            <h3 children={post.title} />\n            <p children={post.content} />\n        </div>\n    );\n    return (\n        <div>\n            {sidebar}\n            <hr />\n            {content}\n        </div>\n    );\n}\n\nclass NameForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n        };\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            value: event.target.value,\n        });\n    }\n\n    handleSumbit = (event) => {\n        alert('提交的名字: ' + this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSumbit}>\n                <label>\n                    名字:\n                    <input value={this.state.value} onChange={this.handleChange} />\n                </label>\n                <input type='submit' value='提交' />\n            </form>\n        );\n    }\n}\n\nclass EssayForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '请撰写一篇关于你喜欢的 DOM 元素的文章.',\n        };\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            value: event.target.value,\n        });\n    }\n\n    handleSumbit = (event) => {\n        alert('提交的文章: ' + this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSumbit}>\n                <label>\n                    文章:\n                    <textarea value={this.state.value} onChange={this.handleChange} />\n                </label>\n                <input type='submit' value='提交' />\n            </form>\n        );\n    }\n}\n\nclass FlavorForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 'coconut',\n        };\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            value: event.target.value,\n        });\n    }\n\n    handleSumbit = (event) => {\n        alert('你喜欢的口味是: ' + this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSumbit}>\n                <label>\n                    选择你喜欢的口味:\n                    <select value={this.state.value} onChange={this.handleChange}>\n                        <option value='grapefruit' children='葡萄柚' />\n                        <option value='lime' children='酸橙' />\n                        <option value='coconut' children='椰子' />\n                        <option value='mango' children='芒果' />\n                    </select>\n                </label>\n                <input type='submit' value='提交' />\n            </form>\n        );\n    }\n}\n\nclass Reservation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isGoing: true,\n            numberOfGuests: 2,\n        };\n    }\n\n    handleInputChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value,\n        });\n    }\n\n    render() {\n        return (\n            <form>\n                <label>\n                    参与:\n                    <input name='isGoing' type='checkbox' checked={this.state.isGoing} onChange={this.handleInputChange} />\n                </label>\n                <br />\n                <label>\n                    来宾人数:\n                    <input name='numberOfGuests' type='number' value={this.state.numberOfGuests} onChange={this.handleInputChange} />\n                </label>\n            </form>\n        );\n    }\n}\n\nconst ThemeContext = React.createContext('');\nclass BoilingVerdict extends React.Component {\n    static contextType = ThemeContext;\n\n    render() {\n        if(this.context >= 100) {\n            return <p>The water would boil.</p>;\n        }\n        return <p>The water would not boil.</p>;\n    }\n}\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            temperature: '',\n            scale: 'c',\n        };\n    }\n\n    handleCelsiusChange = (value) => {\n        this.setState({\n            temperature: value,\n            scale: 'c',\n        });\n    }\n\n    handleFahrenheitChange = (value) => {\n        this.setState({\n            temperature: value,\n            scale: 'f',\n        })\n    }\n\n    render() {\n        const scale = this.state.scale;\n        const temperature = this.state.temperature;\n        const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n        const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n        const t1 = {temperature: celsius, onTemperatureChange: this.handleCelsiusChange, scale: 'c'};\n        const t2 = {temperature: fahrenheit, onTemperatureChange: this.handleFahrenheitChange, scale: 'f'};\n\n        return (\n            <ThemeContext.Provider value={parseFloat(celsius)}>\n                <TemperatureInput {...t1} />\n                <TemperatureInput {...t2} />\n                <BoilingVerdict />\n            </ThemeContext.Provider>\n        );\n    }\n}\n\nclass TemperatureInput extends React.Component {\n    render() {\n        const temperature = this.props.temperature;\n        const scale = {\n            c: 'Celsius',\n            f: 'Fahrenheit',\n        }[this.props.scale];\n        return (\n            <fieldset>\n                <legend>\n                    Enter temperature in {scale}:\n                </legend>\n                <input value={temperature} onChange={(e) => this.props.onTemperatureChange(e.target.value)} />\n            </fieldset>\n        );\n    }\n}\n\nfunction FancyBorder(props) {\n    return <div className={'fancy-border-' + props.color} children={props.children} />;\n}\n\nfunction WelcomeDialog() {\n    return (\n        <FancyBorder color='blue'>\n            <h1 children='Welcome' />\n            <p children='Thank you for visiting our spacecraft!' />\n        </FancyBorder>\n    );\n}\n\nfunction Dialog(props) {\n    return (\n        <FancyBorder color='blue'>\n            <h1 children={props.title} />\n            <p children={props.message} />\n            {props.children}\n        </FancyBorder>\n    );\n}\n\nclass SignUpDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            login: '',\n        };\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            login: e.target.value,\n        });\n    }\n\n    handleSignUp = () => {\n        alert(`Welcome aboard, ${this.state.login}!`);\n    }\n\n    render() {\n        return (\n            <Dialog title='Mars Exploration Program' message='How should we refer to you?'>\n                <input value={this.state.login} onChange={this.handleChange} />\n                <button onClick={this.handleSignUp} children='Sign Me Up!' />\n            </Dialog>\n        );\n    }\n}\n\nfunction ProductRow(props) {\n    return (\n        <p>\n            <span className={'width-80' + (props.stocked === false ? ' fancy-border-red' : '')} children={props.name} />\n            {props.price}\n        </p>\n    );\n}\n\nfunction ProductCategoryRow(props) {\n    return <p><strong children={props.category} /></p>\n}\n\nconst pfetch = (url, {method='GET', data=null, options=null, callback=()=>{}, err_callback=()=>{}, catch_callback=()=>{}}={}) => {\n    options = options || {\n        method: method,\n    }\n    if(Object.keys(data).length > 0){\n        if(method.toLowerCase() === 'get'){\n            let params = '';\n            for(let key in data) {\n                params += `&${key}=${data[key]}`;\n            }\n            if(!url.includes('?')){\n                params = '?' + params.slice(1);\n            }\n            url += params;\n        }else{\n            options.body = data;\n        }\n    }\n\n    fetch(url, options)\n        .then(res => {\n            if(res.ok){\n                res.json().then(callback.bind(res));\n            }else{\n                err_callback(res);\n            }\n        })\n        .catch(e => catch_callback.bind(e));\n}\n\nclass ProductTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiJson: [],\n        };\n    }\n\n    componentDidMount() {\n        pfetch('http://api.shellcode.cn/test.json?hha=1', {\n            data: {\n                test: 1,\n            },\n            callback: (res) => this.setState({\n                apiJson: res,\n            }),\n        });\n    }\n\n    render() {\n        const items = getFiltered(this.state.apiJson, this.props.filterText, this.props.isStockOnly);\n        const categorys = getCategory(items);\n\n        return (\n            <>\n                <p>\n                    <strong className='width-80' children='Name' />\n                    <strong children='Price' />\n                </p>\n                {categorys.map(value => (\n                    <Fragment key={value}>\n                        <ProductCategoryRow category={value} />\n                        {items.map(item => (value === item.category &&\n                            <ProductRow key={item.name} name={item.name} price={item.price} stocked={item.stocked} />\n                        ))}\n                    </Fragment>\n                ))}\n            </>\n        );\n    }\n}\n\nclass SearchBar extends React.Component {\n    render() {\n        return (\n            <>\n                <input onChange={this.props.onSearchChange} placeholder='Search...' />\n                <br/>\n                <input onChange={this.props.onStockChange} type='checkbox' />\n                Only show products in stock\n            </>\n        );\n    }\n}\n\nclass FilterableProductTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterText: '',\n            isStockOnly: false,\n        };\n    }\n\n    handleSearchChange = (e) => {\n        this.setState({\n            filterText: e.target.value,\n        })\n    }\n\n    handleStockChange = (e) => {\n        this.setState({\n            isStockOnly: e.target.checked,\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <SearchBar onSearchChange={this.handleSearchChange} onStockChange={this.handleStockChange} />\n                <ProductTable filterText={this.state.filterText} isStockOnly={this.state.isStockOnly} />\n            </>\n        );\n    }\n}\n\nfunction App() {\n    const items = [];\n    const messages = ['React', 'Re: React', 'Re: Re: React'];\n    const listItems = messages.map((msg, i) =>\n        <li key={i}>{i + 1} . {msg}</li>\n    );\n    const posts = [\n        {\n            id: 1,\n            title: 'Hello World',\n            content: 'Welcome to learning React!',\n        },\n        {\n            id: 2,\n            title: 'Installation',\n            content: 'You can install React from npm.',\n        }\n    ];\n\n    for(let i=0; i<3; i++) {\n        items.push(<Blog posts={posts}/>);\n    }\n\n    function handleClick(e, a) {\n        e.preventDefault();\n        alert(a);\n    }\n\n    return <FilterableProductTable />;\n}\n\n// ========================================\n\nlet title = 'test';\nconst name = {firstName: 'Rock', lastName: 'Johnson'};\nconst element = (\n    <div>\n        <input name='title' />\n        <input onClick={getTitle} type='button' value='提交' />\n        {getGreeting(name)}\n        <h2>Good to see you here.</h2>\n        <p>{title}</p>\n    </div>\n);\nconst apiJson = [\n  {category: \"Sporting Goods\", price: \"$49.99\", stocked: true, name: \"Football\"},\n  {category: \"Sporting Goods\", price: \"$9.99\", stocked: true, name: \"Baseball\"},\n  {category: \"Sporting Goods\", price: \"$29.99\", stocked: false, name: \"Basketball\"},\n  {category: \"Electronics\", price: \"$99.99\", stocked: true, name: \"iPod Touch\"},\n  {category: \"Electronics\", price: \"$399.99\", stocked: false, name: \"iPhone 5\"},\n  {category: \"Electronics\", price: \"$199.99\", stocked: true, name: \"Nexus 7\"},\n];\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// setInterval(tick, 1000)\n\nfunction getFiltered(lst, filterText, isStockOnly) {\n    let res = [];\n    lst.forEach(value => {\n        if(filterText && !value.name.toLowerCase().includes(filterText)){\n            return;\n        }\n        if(isStockOnly && !value.stocked){\n            return;\n        }\n        res.push(value);\n    });\n\n    return res;\n}\n\nfunction getCategory(lst) {\n    let res = [];\n\n    lst.forEach(value => {\n        if(!res.includes(value.category)){\n            res.push(value.category)\n        }\n    });\n\n    return res;\n}\n\nfunction tick() {\n    const element = (\n        <div>\n            <h1>Hello, world!</h1>\n            <h2>It is {new Date().toLocaleTimeString()}.</h2>\n        </div>\n    )\n    ReactDOM.render(element, document.getElementById('root'));\n}\n\nfunction toCelsius(fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n    return celsius * 9 / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n    if(Number.isNaN(input)) {\n        return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n}\n\nfunction getTitle() {\n    const getitle = null;\n    title = '1111';\n}\n\nfunction formatName(user) {\n    return user.firstName + '.' + user.lastName;\n}\n\nfunction getGreeting(user) {\n    if (user) {\n        return <h1 tabIndex='0'>Hello, {formatName(user)}!</h1>;\n    }\n    return <h1>Hello, Stranger.</h1>;;\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i in lines){\n        const [a, b, c] = lines[i]\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n            return squares[a];\n        }\n    }\n    return null;\n}\n"],"sourceRoot":""}